name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository }}

jobs:
  # Job principal pour builder et publier les images Docker
  build-and-push:
    runs-on: ubuntu-latest
    name: Build and Push Docker Images
    
    permissions:
      contents: read
      packages: write
    
    strategy:
      matrix:
        service:
          - name: anime-saas-front
            context: ./anime-saas-front
            dockerfile: ./anime-saas-front/Dockerfile
          - name: anime-saas-api
            context: ./anime-saas-api
            dockerfile: ./anime-saas-api/Dockerfile
          - name: anime-saas-mlservice
            context: ./anime-saas-mlservice
            dockerfile: ./anime-saas-mlservice/Dockerfile
          - name: anime-saas-agent
            context: ./anime-saas-agent
            dockerfile: ./anime-saas-agent/Dockerfile
          - name: anime-saas-reverseproxy
            context: ./anime-saas-reverseproxy
            dockerfile: ./anime-saas-reverseproxy/Dockerfile
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.service.name }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.service.context }}
        file: ${{ matrix.service.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

  deploy-staging:
    needs: build-and-push
    runs-on: ubuntu-latest
    name: Deploy to Staging
    if: github.ref == 'refs/heads/dev'
    
    env:
      # Variables de base de données
      DB_HOST: ${{ vars.DB_HOST || 'anime-saas-mysql' }}
      DB_NAME: ${{ vars.DB_NAME || 'anime_saas_db' }}
      DB_USER: ${{ vars.DB_USER || 'animeuser' }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
      
      # Variables OpenAI pour l'agent
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_ORG_ID: ${{ secrets.OPENAI_ORG_ID }}
      OPENAI_PROJECT_ID: ${{ secrets.OPENAI_PROJECT_ID }}
      
      # Variables Google Services
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
      
      # Variables Email/Communication
      EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
      EMAIL_TO: ${{ secrets.EMAIL_TO }}
      FROM_NAME: ${{ secrets.FROM_NAME }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      
      # Registry pour les images Docker
      REGISTRY_PREFIX: ${{ vars.REGISTRY_PREFIX || 'ghcr.io/stephengodard' }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Deploy to staging
      run: |
        echo "Déploiement en staging..."
        echo "Base de données: $DB_HOST/$DB_NAME"
        # Exemple de déploiement avec docker-compose
        docker-compose -f docker-compose.yml up -d
        # Ou avec des variables d'environnement spécifiques
        # docker-compose --env-file .env.staging up -d

