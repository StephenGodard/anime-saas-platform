version: '3.8'

services:
  anime-saas-front:
    build:
      context: ./anime-saas-front
    container_name: anime-saas-front
    ports:
      - "3000:80"  # Serveur Nginx statique
    depends_on:
      - anime-saas-api

  anime-saas-api:
    build:
      context: ./anime-saas-api
    container_name: anime-saas-api
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DOTNET_RUNNING_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=${DB_HOST};Database=${DB_NAME};User Id=${API_USER};Password=${API_USER_PASSWORD};
    depends_on:
      - anime-saas-mysql


  anime-saas-mlservice:
    build:
      context: ./anime-saas-mlservice
    container_name: anime-saas-mlservice
    ports:
      - "5000:5000"
    depends_on:
      - anime-saas-mysql

  anime-saas-mysql:
    image: mysql:8
    container_name: anime-saas-mysql
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: anime_saas_db
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/init:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql

  anime-saas-agent:
    build:
      context: ./anime-saas-agent
    container_name: anime-saas-agent
    restart: always
    environment:
      - API_URL=http://anime-saas-api:8080/api
    volumes:
      - ./anime-saas-agent/docker-volumes/credentials/.env:/app/.env
      - ./anime-saas-agent/docker-volumes/logs:/app/logs
    depends_on:
      - anime-saas-api

volumes:
  mysql_data: