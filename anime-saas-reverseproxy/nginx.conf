events {
    worker_connections 1024;
}
 
http {
    # HTTP â†’ ACME + Redirect to HTTPS
    server {
        listen 80;
        server_name localhost dev.animesphere.io;

        # ACME HTTP-01 challenge (Let's Encrypt)
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;   # must be mounted in docker-compose
        }
    }

        server {
        listen 443 ssl;
        http2 on;
         server_name localhost dev.animesphere.io;
         ssl_certificate     /etc/letsencrypt/live/dev.animesphere.io/fullchain.pem;
         ssl_certificate_key /etc/letsencrypt/live/dev.animesphere.io/privkey.pem;
         ssl_protocols       TLSv1.2 TLSv1.3;
         ssl_ciphers         HIGH:!aNULL:!MD5;
         ssl_prefer_server_ciphers on;
         add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
         error_log /var/log/nginx/error.log;
         access_log /var/log/nginx/access.log;

        # Anime-saas-api - Route pour l'API
        location ~ ^/api/(.*)$ {
            proxy_pass http://anime-saas-api:8080/api/$1$is_args$args;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection "upgrade";
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-Forwarded-Host  $host;
            proxy_set_header   Host              $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            # Headers essentiels pour les cookies
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   Origin $http_origin;
            proxy_set_header   Cookie $http_cookie;
            # Transmission des cookies dans les deux sens
            proxy_pass_header  Set-Cookie;
        }
         
         # Anime-saas-api swagger
         location /swagger/ {
             allow 90.127.170.106;
             deny all;
             proxy_pass http://anime-saas-api:8080/swagger/;
             proxy_http_version 1.1;
             proxy_set_header   Upgrade $http_upgrade;
             proxy_set_header   Connection keep-alive;
             proxy_set_header   Host $host;
             proxy_cache_bypass $http_upgrade;
             proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header   X-Forwarded-Proto $scheme;
         }
         
         # ML Service (FastAPI)
         location /ml/ {
             allow 90.127.170.106;
             deny all;
             proxy_pass http://anime-saas-mlservice:5000/;
         }

        # Configuration pour les assets Nuxt et WebSockets (hot reload)
        location /_nuxt/ {
            proxy_pass http://anime-saas-front:3000/_nuxt/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Sert tout le reste (frontend Nuxt)
        location / {
            proxy_pass http://anime-saas-front:3000/;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection "upgrade";
            proxy_set_header   Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }
     }
 }