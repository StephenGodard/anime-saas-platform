events {
    worker_connections 1024;
}
 
http {
    server {
         listen 80;
         server_name localhost;
         error_log /var/log/nginx/error.log;
         access_log /var/log/nginx/access.log;


          
        # Route spécifique pour les icônes Nuxt (doit être avant /api/)
        # Réécrit /api/_nuxt_icon/* vers /_nuxt_icon/* côté frontend
        location /api/_nuxt_icon/ {
            proxy_pass http://anime-saas-front:3000/_nuxt_icon/;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection "upgrade";
            proxy_set_header   Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            # Headers pour les icônes
            proxy_set_header   Accept "image/svg+xml,*/*";
            add_header         Cache-Control "public, max-age=31536000, immutable";
        }

        # Route pour les icônes Heroicons spécifiques
        location ~ ^/_nuxt_icon/heroicons/(.*)$ {
            proxy_pass http://anime-saas-front:3000/_nuxt_icon/heroicons/$1;
            proxy_http_version 1.1;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            # Headers spécifiques pour SVG
            proxy_set_header   Accept "image/svg+xml,*/*";
            add_header         Content-Type "image/svg+xml";
            add_header         Cache-Control "public, max-age=31536000, immutable";
        }
 
        # Anime-saas-api - Route pour l'API
        location ~ ^/api/(.*)$ {
            proxy_pass http://anime-saas-api:8080/api/$1$is_args$args;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection "upgrade";
            proxy_set_header   Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            # Headers essentiels pour les cookies
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   Origin $http_origin;
            proxy_set_header   Cookie $http_cookie;
            # Transmission des cookies dans les deux sens
            proxy_pass_header  Set-Cookie;
        }
         
         # Anime-saas-api swagger
         location /swagger/ {
             proxy_pass http://anime-saas-api:8080/swagger/;
             proxy_http_version 1.1;
             proxy_set_header   Upgrade $http_upgrade;
             proxy_set_header   Connection keep-alive;
             proxy_set_header   Host $host;
             proxy_cache_bypass $http_upgrade;
             proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header   X-Forwarded-Proto $scheme;
         }
         
         # ML Service (FastAPI)
         location /ml/ {
             proxy_pass http://anime-saas-mlservice:5000/;
         }

        # Configuration pour les assets Nuxt et WebSockets (hot reload)
        location /_nuxt/ {
            proxy_pass http://anime-saas-front:3000/_nuxt/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Sert tout le reste (frontend Nuxt)
        location / {
            proxy_pass http://anime-saas-front:3000/;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection "upgrade";
            proxy_set_header   Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }
     }
 }