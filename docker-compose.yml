services:
  anime-saas-reverseproxy:
    build:
      context: ./anime-saas-reverseproxy
    container_name: anime-saas-reverseproxy
    volumes:
      - ./anime-saas-reverseproxy/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
    depends_on:
      - anime-saas-front
      - anime-saas-api
      - anime-saas-mlservice
    restart: always

  anime-saas-front:
    build:
      context: ./anime-saas-front
      dockerfile: Dockerfile
    container_name: anime-saas-front
    # Suppression de la commande redondante car déjà définie dans le Dockerfile
    expose:
      - "3000"

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 5s
      retries: 3

  anime-saas-api:
    build:
      context: ./anime-saas-api
    container_name: anime-saas-api
    command: dotnet watch run --urls=http://0.0.0.0:8080
    volumes:
      - ./anime-saas-api/AnimeSaasApi:/src
    # Port exposé uniquement sur le réseau interne
    expose:
      - "8080"
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=${DB_HOST};Database=${DB_NAME};User Id=${API_USER};Password=${API_USER_PASSWORD};
    depends_on:
      - anime-saas-mysql

  anime-saas-mlservice:
    build:
      context: ./anime-saas-mlservice
    container_name: anime-saas-mlservice
    command: uvicorn main:app --host 0.0.0.0 --port 5000 --reload
    volumes:
      - ./anime-saas-mlservice/app:/app
    # Port exposé uniquement sur le réseau interne
    expose:
      - "5000"
    depends_on:
      - anime-saas-mysql

  anime-saas-mysql:
    image: mysql:8
    container_name: anime-saas-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: anime_saas_db
      MYSQL_USER: animeuser
      MYSQL_PASSWORD: animepass
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/init:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql

  anime-saas-agent:
    build: ./anime-saas-agent
    env_file:
      - ./anime-saas-agent/.env
    environment:
      - API_URL=http://anime-saas-api:8080/api
    volumes:
      - ./anime-saas-agent/logs:/app/logs
    depends_on:
      - anime-saas-api
    restart: unless-stopped

volumes:
  mysql_data:
  nuxt_cache: